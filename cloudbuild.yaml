options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Build the backend container image
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'backend'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend', '.']
  
  # Build the frontend container image
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'frontend'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend', '.']
  
  # Push the backend container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend']
  
  # Push the frontend container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend']
  
  # Deploy to Cloud Run with sidecar pattern
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
    - 'beta'
    - 'run'
    - 'deploy'
    - 'docubot-service'
    - '--region'
    - 'us-central1'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'
    - '--execution-environment'
    - 'gen2'
    - '--container'
    - 'frontend'
    - '--image'
    - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend'
    - '--port'
    - '3000'
    - '--command'
    - 'node'
    - '--args'
    - 'server.js'
    - '--set-env-vars'
    - 'NEXT_PUBLIC_API_URL=http://localhost:8080'
    - '--container'
    - 'backend'
    - '--image'
    - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend'
    - '--command'
    - 'python'
    - '--args'
    - 'src/main.py'
    - '--set-env-vars'
    - 'PORT=8080'
    - '--cpu'
    - '1'
    - '--memory'
    - '1Gi'
    - '--update-annotations'
    - 'run.googleapis.com/container-dependencies=backend:frontend'

images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend'
