options:
  logging: CLOUD_LOGGING_ONLY
  dynamicSubstitutions: true

steps:
  # Configure docker auth
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['auth', 'configure-docker', 'us-central1-docker.pkg.dev']

  # Build the backend container image
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'backend'
    args: 
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend'
      - '--cache-from'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend'
      - '.'
  
  # Build the frontend container image
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'frontend'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend'
      - '--cache-from'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend'
      - '--build-arg'
      - 'NEXT_PUBLIC_API_URL=http://localhost:8080'
      - '.'
  
  # Push the backend container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend']
  
  # Push the frontend container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend']
  
  # Create Cloud Run service configuration
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: /bin/sh
    args:
    - '-c'
    - |
      cat > /workspace/service.yaml << 'EOF'
      apiVersion: serving.knative.dev/v1
      kind: Service
      metadata:
        name: docubot-service
        labels:
          cloud.googleapis.com/location: "us-central1"
      spec:
        template:
          metadata:
            annotations:
              run.googleapis.com/execution-environment: gen2
          spec:
            containers:
              - name: frontend
                image: "us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend"
                ports:
                  - containerPort: 3000
                command: ["node"]
                args: ["server.js"]
                resources:
                  limits:
                    cpu: "2"
                    memory: "2Gi"
                env:
                  - name: PORT
                    value: "3000"
                  - name: NODE_ENV
                    value: "production"
                  - name: NEXT_PUBLIC_API_URL
                    value: "http://localhost:8080"
                  - name: NODE_OPTIONS
                    value: "--max-old-space-size=512 --max-http-header-size=16384"
                  - name: SERVER_TIMEOUT
                    value: "60000"
                  - name: KEEP_ALIVE_TIMEOUT
                    value: "65000"
              - name: backend
                image: "us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend"
                ports:
                  - containerPort: 8080
                command: ["python"]
                args: ["main.py"]
                env:
                  - name: PORT
                    value: "8080"
                  - name: PYTHONPATH
                    value: "/app/src"
      EOF

  # Deploy to Cloud Run using the service configuration
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args:
    - 'beta'
    - 'run'
    - 'services'
    - 'replace'
    - '/workspace/service.yaml'
    - '--platform'
    - 'managed'
    - '--region'
    - 'us-central1'

images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend'
