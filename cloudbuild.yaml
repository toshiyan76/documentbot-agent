options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Build the backend container image
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'backend'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend', '.']
  
  # Build the frontend container image
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'frontend'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend', '.']
  
  # Push the backend container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend']
  
  # Push the frontend container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend']
  
  # Deploy to Cloud Run with sidecar pattern
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
    - 'run'
    - 'deploy'
    - 'docubot-service'
    - '--region'
    - 'asia-east1'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'
    - '--ingress'
    - 'all'
    - '--execution-environment'
    - 'gen2'
    - '--containers'
    - |
      frontend=us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend,
      backend=us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend
    - '--container-command'
    - 'frontend=server.js'
    - '--container-port'
    - 'frontend=3000,backend=8080'
    - '--container-env'
    - 'frontend=NEXT_PUBLIC_API_URL=http://localhost:8080'
    - '--port'
    - '3000'

images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend'
