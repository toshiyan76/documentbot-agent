options:
  logging: CLOUD_LOGGING_ONLY
  dynamicSubstitutions: true

steps:
  # Configure docker auth
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['auth', 'configure-docker', 'us-central1-docker.pkg.dev']

  # Build the backend container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend'
      - '--cache-from'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend'
      - '-f'
      - 'backend/Dockerfile'
      - './backend'

  # Build the frontend container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend'
      - '--cache-from'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend'
      - '--build-arg'
      - 'NEXT_PUBLIC_API_URL=http://localhost:8080'
      - '-f'
      - 'frontend/Dockerfile'
      - './frontend'

  # Push the backend container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend']

  # Push the frontend container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend']

    # service.yamlを生成（テンプレートとして）
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -c
      - |
         cat > service.yaml <<'EOF'
         apiVersion: serving.knative.dev/v1
         kind: Service
         metadata:
           name: docubot-service
         spec:
           template:
             metadata:
               annotations:
                 run.googleapis.com/secrets: openai_api_key:projects/$PROJECT_NUMBER/secrets/openai_api_key/versions/2,langchain_tracing_v2:projects/$PROJECT_NUMBER/secrets/langchain_tracing_v2/versions/2,langchain_endpoint:projects/$PROJECT_NUMBER/secrets/langchain_endpoint/versions/2,langchain_api_key:projects/$PROJECT_NUMBER/secrets/langchain_api_key/versions/2,langchain_project:projects/$PROJECT_NUMBER/secrets/langchain_project/versions/2,cors_origins:projects/$PROJECT_NUMBER/secrets/cors_origins/versions/2
             spec:
               containers:
                 - name: frontend
                   image: us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend
                   ports:
                     - containerPort: 3000
                   env:
                     - name: NEXT_PUBLIC_API_URL
                       value: "http://localhost:8080"
                 - name: backend
                   image: us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend
                   env:
                     - name: PORT
                       value: "8080"
                     - name: OPENAI_API_KEY
                       valueFrom:
                         secretKeyRef:
                           name: openai-api-key
                           key: "2"
                     - name: LANGCHAIN_TRACING_V2
                       valueFrom:
                         secretKeyRef:
                           name: langchain-tracing-v2
                           key: "2"
                     - name: LANGCHAIN_ENDPOINT
                       valueFrom:
                         secretKeyRef:
                           name: langchain-endpoint
                           key: "2"
                     - name: LANGCHAIN_API_KEY
                       valueFrom:
                         secretKeyRef:
                           name: langchain-api-key
                           key: "2"
                     - name: LANGCHAIN_PROJECT
                       valueFrom:
                         secretKeyRef:
                           name: langchain-project
                           key: "2"
                     - name: CORS_ORIGINS
                       valueFrom:
                         secretKeyRef:
                           name: cors-origins
                           key: "2"
         EOF

  # Cloud Runへのデプロイ
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'services'
      - 'replace'
      - 'service.yaml'
      - '--region'
      - 'us-central1'

images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/backend'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/docubot-repo/frontend'
